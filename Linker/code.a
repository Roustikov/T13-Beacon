;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 09.05.2014
;Author  : MakZ
;Company :
;Comments:
;
;
;Chip type               : ATtiny13A
;AVR Core Clock frequency: 8,000000 MHz
;Memory model            : Tiny
;External RAM size       : 0
;Data Stack size         : 16
;*****************************************************/
;
;#include <tiny13a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x18
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000006 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000007 VOL: 0
	#endif
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 0
;#include <sleep.h>
;#include <delay.h>
;
;#define OFF 1
;#define ON 0
;
;#define LIGHT1(X) PORTB.0 = X;
;#define LIGHT2(X) PORTB.2 = X;
;
;int mode = 0;
;int delay_t = 0;
;int isSleep = 0;
;
;void mode_switch()
; 0000 0026 {

	.CSEG
;PCODE: $0000000A VOL: 0
;PCODE: $0000000B VOL: 0
; 0000 0027     if(isSleep == 1)
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0028     {
; 0000 0029         mode = 5;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 002A     }
; 0000 002B     else
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 002C     {
; 0000 002D         mode++;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 002E         if(mode == 6)
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002F             mode = 0;
;PCODE: $00000019 VOL: 0
; 0000 0030     }
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0031     isSleep = 0;
;PCODE: $0000001C VOL: 0
; 0000 0032 }
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;
;void mode_set(int mode_number)
; 0000 0035 {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0036     mode = mode_number;
;PCODE: $00000021 VOL: 0
;	mode_number -> Y+0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0037 }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 003B {
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 003C     sleep_disable();
;PCODE: $00000029 VOL: 0
; 0000 003D     delay_ms(600);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 003E 
; 0000 003F     if(PINB.1 == 1)
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0040     {
; 0000 0041         mode_switch();
;PCODE: $0000002F VOL: 0
; 0000 0042     }
; 0000 0043     else
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0044     {
; 0000 0045         mode_set(5);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0046         isSleep = 1;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0047     }
;PCODE: $00000037 VOL: 0
; 0000 0048 }
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;
;// Declare your global variables here
;
;void strobe(int length)
; 0000 004D {
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 004E     LIGHT1(ON);
;PCODE: $0000003D VOL: 0
;	length -> Y+0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 004F     LIGHT2(ON);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0050     delay_ms(length);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0051     LIGHT1(OFF);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0052     LIGHT2(OFF);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0053     delay_ms(length);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0054 }
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;
;
;void main(void)
; 0000 0058 {
;PCODE: $0000004D VOL: 0
; 0000 0059 // Declare your local variables here
; 0000 005A int i = 0;
; 0000 005B // Crystal Oscillator division factor: 1
; 0000 005C #pragma optsize-
; 0000 005D CLKPR=0x80;
;	i -> R16,R17
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 005E CLKPR=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 005F #ifdef _OPTIMIZE_SIZE_
; 0000 0060 #pragma optsize+
; 0000 0061 #endif
; 0000 0062 
; 0000 0063 // Input/Output Ports initialization
; 0000 0064 // Port B initialization
; 0000 0065 // Func5=In Func4=In Func3=In Func2=Out Func1=In Func0=Out
; 0000 0066 // State5=T State4=T State3=T State2=0 State1=T State0=0
; 0000 0067 PORTB=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0068 DDRB=0x05;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0069 
; 0000 006A // Timer/Counter 0 initialization
; 0000 006B // Clock source: System Clock
; 0000 006C // Clock value: Timer 0 Stopped
; 0000 006D // Mode: Normal top=0xFF
; 0000 006E // OC0A output: Disconnected
; 0000 006F // OC0B output: Disconnected
; 0000 0070 TCCR0A=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0071 TCCR0B=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0072 TCNT0=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0073 OCR0A=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0074 OCR0B=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0075 
; 0000 0076 // External Interrupt(s) initialization
; 0000 0077 // INT0: On
; 0000 0078 // INT0 Mode: Low level
; 0000 0079 // Interrupt on any change on pins PCINT0-5: Off
; 0000 007A GIMSK=0x40;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 007B MCUCR=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 007C GIFR=0x40;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 007D 
; 0000 007E // Timer/Counter 0 Interrupt(s) initialization
; 0000 007F TIMSK0=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0080 
; 0000 0081 // Analog Comparator initialization
; 0000 0082 // Analog Comparator: Off
; 0000 0083 ACSR=0x80;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0084 ADCSRB=0x00;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0085 DIDR0=0x00;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0086 
; 0000 0087 // ADC initialization
; 0000 0088 // ADC disabled
; 0000 0089 ADCSRA=0x00;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 008A 
; 0000 008B // Global enable interrupts
; 0000 008C #asm("sei")
;PCODE: $00000072 VOL: 0
	sei
;PCODE: $00000073 VOL: 0
; 0000 008D 
; 0000 008E while (1)
;PCODE: $00000074 VOL: 0
; 0000 008F       {
; 0000 0090             while(mode == 0)
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0091             {
; 0000 0092                 LIGHT1(ON);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0093                 LIGHT2(ON);
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0094             }
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0095 
; 0000 0096             while(mode == 1)
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0097             {
; 0000 0098                 strobe(200);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0099             }
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 009A 
; 0000 009B             while(mode == 2)
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 009C             {
; 0000 009D                 delay_t = 0;
;PCODE: $0000008B VOL: 0
; 0000 009E 
; 0000 009F                 for(i = 0; i < 7; i++)
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00A0                 {
; 0000 00A1                     strobe(50);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00A2                 }
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00A3 
; 0000 00A4                 while(mode == 2 && delay_t < 7)
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00A5                 {
; 0000 00A6                     delay_ms(100);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00A7                     delay_t++;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 00A8                 }
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00A9             }
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 00AA 
; 0000 00AB             while(mode == 3)
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 00AC             {
; 0000 00AD                 LIGHT1(ON);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 00AE                 LIGHT2(ON);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 00AF                 delay_ms(300);
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 00B0                 LIGHT1(OFF);
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 00B1                 LIGHT2(OFF);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 00B2 
; 0000 00B3                 delay_t = 0;
;PCODE: $000000C0 VOL: 0
; 0000 00B4                 while(mode == 3 && delay_t < 11)
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 00B5                 {
; 0000 00B6                     delay_ms(100);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00B7                     delay_t++;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 00B8                 }
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 00B9             }
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 00BA 
; 0000 00BB             while(mode == 4)
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00BC             {
; 0000 00BD                 LIGHT2(OFF);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 00BE                 LIGHT1(ON);
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 00BF 
; 0000 00C0                 delay_t = 0;
;PCODE: $000000DE VOL: 0
; 0000 00C1                 while(mode == 4 && delay_t < 4)
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 00C2                 {
; 0000 00C3                     delay_ms(100);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 00C4                     delay_t++;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00C5                 }
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 00C6 
; 0000 00C7                 if(mode != 4)
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 00C8                     break;
;PCODE: $000000F5 VOL: 0
; 0000 00C9 
; 0000 00CA                 LIGHT2(ON);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00CB                 LIGHT1(OFF);
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00CC 
; 0000 00CD                 delay_t = 0;
;PCODE: $000000FB VOL: 0
; 0000 00CE                 while(mode == 4 && delay_t < 4)
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 00CF                 {
; 0000 00D0                     delay_ms(100);
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 00D1                     delay_t++;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00D2                 }
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00D3             }
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 00D4 
; 0000 00D5             while(mode == 5)
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00D6             {
; 0000 00D7                  LIGHT1(OFF);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00D8                  LIGHT2(OFF);
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 00D9                  sleep_enable();
;PCODE: $00000119 VOL: 0
; 0000 00DA                  powerdown();
;PCODE: $0000011A VOL: 0
; 0000 00DB             }
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00DC       }
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00DD }
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
